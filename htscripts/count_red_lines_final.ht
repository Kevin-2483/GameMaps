

log('=== 红色线条统计脚本开始 ===');

// 使用匿名函数过滤红色线条，避免函数名冲突
log('开始过滤红色线条...');
var redLines = filterElements(fun(element) {
    var type = element['type'];
    var color = element['color'];
    var redColor = 4294901760; // 0xFFFF0000
    
    // 检查是否为线条类型
    var isLine = (type == 'line' || type == 'dashedLine' || type == 'arrow' || type == 'freeDrawing');    // 检查是否为红色
    var isRed = (color == redColor);
    
    // log('检查元素: type=' + type + ', color=' + color.toString() + ', isLine=' + isLine.toString() + ', isRed=' + isRed.toString());
    
    return isLine && isRed;
});

var redLineCount = redLines.length;
// log('在所有图层中找到 ' + redLineCount.toString() + ' 条红色线条');

// 打印每条红色线条的详细信息
for (var i = 0; i < redLines.length; i = i + 1) {
    var line = redLines[i];
    log('  红色线条 ' + (i + 1).toString() + ': ' + 
        line['type'] + ' (图层: ' + line['layerId'] + ')');
}

// 获取包含"num"的文本元素
log('搜索包含"num"的文本元素...');
var numTexts = findTextElementsByContent('num');
// log('找到 ' + numTexts.length.toString() + ' 个包含"num"的文本元素');

var updateCount = 0;

// 更新每个包含"num"的文本元素
for (var i = 0; i < numTexts.length; i = i + 1) {
    var textElement = numTexts[i];    var elementId = textElement['id'];
    var currentText = textElement['text'];
    
    log('处理文本元素: ' + elementId + ', 当前文本: "' + currentText + '"');
    
    // 构建新的文本内容
    var newText = 'Red lines: ' + redLineCount.toString();
    
    // 执行更新
    if (updateTextContent(elementId, newText)) {
        updateCount = updateCount + 1;
        log('  已更新元素 ' + elementId + ': "' + newText + '"');
    } else {
        log('  更新失败: ' + elementId);
    }
}

// 输出结果摘要
log('=== 执行完成 ===');
log('红色线条总数: ' + redLineCount.toString());
log('更新文本元素: ' + updateCount.toString());

// 返回结果
var result = {
    'redLineCount': redLineCount,
    'updatedTexts': updateCount,
    'success': true
};

result;
